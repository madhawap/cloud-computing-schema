BASE <https://w3id.org/cocoon/data/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX gr: <http://purl.org/goodrelations/v1#>
PREFIX cocoon: <http://w3id.org/cocoon/v1.0.1#>

GENERATE { 

  <network/load_balancing/data/gcloud> a cocoon:LBData;
    cocoon:hasProvider cocoon:gcloud;
    cocoon:hasDirection cocoon:Ingress;
    gr:hasPriceSpecification [ 
        a gr:UnitPriceSpecification ; 
            gr:hasCurrency "USD"^^xsd:string; 
            gr:hasCurrencyValue ?price; 
            cocoon:hasRegion <region/gcloud/{?region}>;
            gr:hasUnitOfMeasurement cocoon:GB;
    ];
}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/load_balancing_data.json> AS ?source
ITERATOR iter:JSONListKeys( ?source) AS ?region
WHERE {
    BIND(xsd:float(fun:JSONPath(?source, "$.{?region}" )) AS ?price)
}
