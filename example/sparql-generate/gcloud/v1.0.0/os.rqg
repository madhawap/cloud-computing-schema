BASE <https://w3id.org/cocoon/data/> 
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX gr: <http://purl.org/goodrelations/v1#>
PREFIX cocoon: <https://w3id.org/cocoon/v1.0#>

GENERATE { 
    <os/glcoud/{?key}> a cocoon:SystemImage;
        rdfs:label ?key;
        cocoon:hasProvider cocoon:gcloud .

    <os/glcoud/{?key}> gr:hasPriceSpecification [ 
        a cocoon:OSPriceSpecification ; 
            gr:hasCurrency "USD"^^xsd:string; 
            cocoon:hasCurrencyValue ?low;
            cocoon:forCoresLessEqual ?cores;
            cocoon:chargedPerCore ?percore;
    ] .

    <os/glcoud/{?key}> gr:hasPriceSpecification [ 
        a cocoon:OSPriceSpecification ; 
            gr:hasCurrency "USD"^^xsd:string; 
            cocoon:hasCurrencyValue ?high;
            cocoon:forCoresMoreThan ?cores;
            cocoon:chargedPerCore ?percore;
            cocoon:forCoresLessEqual ?cores2Times;
    ] .

    GENERATE {
        <os/glcoud/{?key}> gr:hasPriceSpecification [ 
            a cocoon:OSPriceSpecification ; 
                gr:hasCurrency "USD"^^xsd:string; 
                cocoon:hasCurrencyValue ?highest;
                cocoon:forCoresMoreThan ?cores2Times;
                cocoon:chargedPerCore ?percore;
        ] .
    } WHERE {
        FILTER( BOUND(?highest) )
    }    .

}
SOURCE <https://raw.githubusercontent.com/miranda-zhang/cloud-computing-schema/master/example/jq/gcloud/os.json> AS ?source
ITERATOR  iter:JSONListKeys(?source) AS ?key
WHERE {
    BIND(fun:JSONPath(?source, '$.{?key}' ) AS ?OSPriceSpec)
    BIND( xsd:float( fun:JSONPath(?OSPriceSpec, '.low' ) ) AS ?low)
    BIND( xsd:float( fun:JSONPath(?OSPriceSpec, '.high' ) ) AS ?high)
    BIND( xsd:boolean( fun:JSONPath(?OSPriceSpec, '.percore' ) ) AS ?percore)
    BIND( xsd:decimal( fun:JSONPath(?OSPriceSpec, '.cores' ) ) AS ?cores)
    BIND( xsd:float( fun:JSONPath(?OSPriceSpec, '.highest' ) ) AS ?highest)
    BIND( xsd:decimal( IF( BOUND(?highest) , ?cores * 2 , ?undef ) ) AS ?cores2Times)
}
